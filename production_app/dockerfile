# Use the desired Python version as a build argument
ARG PYTHON_VERSION=3.13

# Base image
FROM python:${PYTHON_VERSION}-slim AS base

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Create a user with a specific UID and a different home directory
ARG UID=10001
RUN adduser --disabled-password --gecos "" --home "/app" --shell "/sbin/nologin" --no-create-home --uid "${UID}" appuser

# Set the working directory
WORKDIR /app

# Install Python dependencies
FROM base AS dependencies
# Copy only the requirements file, to leverage Docker cache
COPY requirements.txt .

RUN mkdir -p /app/.cache && chown -R appuser:appuser /app/.cache
# Install requirements using cache
RUN --mount=type=cache,target=/root/.cache/pip python -m pip install -r requirements.txt

# Copy the app code into the image
FROM dependencies AS final

# Copy configuration files to app root
COPY gunicorn_conf.py pyproject.toml /app/

# Copy the entire app directory contents to app root
COPY app/ /app/

# Expose the application port
EXPOSE 8080

# Switch to a non-root user for security
USER appuser

# Define the command to run the application
# CMD ["gunicorn", "-c", "gunicorn_conf.py", "main:app"] # use with gunicorn config file
CMD ["gunicorn", "-w", "4", "-k", "uvicorn_worker.UvicornWorker", "--bind", "0.0.0.0:8080", "main:app"]